from datetime import timedelta as tdelta
import datetime as dt
import importlib as implib
import math
import subprocess
import time
import os

try:
    implib.import_module("pyautogui")
    print("pyautogui is already installed\n")
except ModuleNotFoundError:
    subprocess.call('pip install pyautogui')
    print('\nModule installed\n')

import pyautogui

def timer_countdown(duration:int):
    while duration:
        mins,secs = divmod(duration,60)
        timer_c = f"{format(mins,'02')}:{format(secs,'02')}"
        print(timer_c,end='\r')
        duration -= 1
        time.sleep(1)

def available():
    try:
        while True:
            u_hours = input("Enter the number of hours the script will run:\n")
            try:
                u_hours = float(u_hours)
                break
            except ValueError:
                print("Invalid input, enter a number.\n")
                time.sleep(1)

        while True:
            u_minutes = input("Enter the number of minutes the script will run:\n")
            try:
                u_minutes = int(u_minutes)
                break
            except ValueError:
                print("Invalid input, enter a number (without a decimal).\n")
                time.sleep(1)

        u_hours = math.floor(u_hours)
        end = "17:00:00"
        tcheck = dt.datetime.now()
        tcheck = tcheck + tdelta(hours=u_hours)
        tcheck = tcheck + tdelta(minutes=u_minutes)
        tcheckf = tcheck.strftime("%H:%M:%S")

        if tcheckf > end:
            while True:
                u_cont = input(f"\nDo you want the script to end at 5:00 PM (Y/N)?\nIf 'N' the script will continue for the specified duration: ({format(math.floor(u_hours),'02')}:{format(u_minutes,'02')}):\n").upper()
                if u_cont == 'Y' or u_cont == 'N':
                    break
                else:
                    print("Invalid input. Please try again.\n")

        pause = 240

        minutes = (u_hours * 60) + u_minutes
        seconds = minutes * 60

        iterations = seconds / pause        
        iterations = math.ceil(iterations)

        os.system('cls')

        pyautogui.FAILSAFE = True
        
        print(f"Duration of script: {format(u_hours,'02')}:{format(u_minutes,'02')}\nNumber of iterations: {iterations}")    
        print('\nStart\n')

        for i in range(1, iterations + 1):
            now = dt.datetime.now()
            timer = now.strftime("%H:%M:%S")

            try:            
                if u_cont == "Y":
                    if timer >= end:
                        print(f"It is now past 5PM, the script will now end.\t{timer}\n")
                        time.sleep(2)
                        break
            except UnboundLocalError:
                pass

            print(f"Iteration: {i}\t{timer}")
            print('\tMove')
            pyautogui.moveTo(960,0)
            pyautogui.moveTo(960,540,duration=8)
            print('\tRest\n')
            for j in range(0,3):
                pyautogui.press('shift')
            timer_countdown(pause)

        print('Done')
        input("\nPress 'Enter' to close the script\n")
        print("Closing...")
        time.sleep(1)

    except pyautogui.FailSafeException:
        print("\nScript has been aborted due to FailSafe trigger")
        time.sleep(1)
        input("\nPress 'Enter' to close the script\n")
        print("Closing...")
        time.sleep(1)

    except KeyboardInterrupt:
        print("Closing...")
        time.sleep(1)

available()
